{"version":3,"sources":["style.js","Data/header.js","Components/Header.js","App.js","serviceWorker.js","index.js"],"names":["style","light","fg","bg","primary","secondary","accent","header","fullName","title","email","github","address","profile","hoverTitles","StyleBase","styled","_templateObject","props","theme","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","mugshot","__webpack_require__","e","then","bind","module","setState","default","Mugshot","react_default","a","createElement","className","followCursor","data","map","line","i","key","href","concat","Component","Experience","React","lazy","Skills","Education","Extra","GlobalStyle","createGlobalStyle","App_templateObject","div","_templateObject2","App","styled_components_browser_esm","App_StyleBase","Header_Header","react","fallback","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2fe8a261.chunk.js","sourcesContent":["export default {\n  light: {\n    fg: 'hsl(205, 7%, 33%)',\n    bg: 'hsl(0, 0%, 98%)',\n\n    primary: 'hsl(222, 22%, 15%)',\n    secondary: 'hsl(210, 8%, 45%)',\n    accent: 'hsl(209, 89%, 44%)',\n  },\n}\n","export default {\n  fullName: 'SaÃ¯d Dermoumi',\n  title: 'Full Stack Developer',\n  email: 'hi@sdrm.me',\n  github: 'github.com/dermoumi',\n  address: 'Rabat, Morocco',\n  profile: [\n    'Dangerously curious and inquisitive.',\n    'I enjoy solving problems, hacking stuff and forcing puns.',\n  ],\n  hoverTitles: [],\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport data from '../Data/header'\n\nconst StyleBase = styled.header`\n  display: flex;\n  flex-flow: column;\n  justify-content: center;\n\n  @media screen {\n    min-height: calc(100vh - 100px);\n    margin-bottom: 32px;\n  }\n\n  .mugshot {\n    max-width: 230px;\n    height: auto;\n\n    .st {\n      stroke: ${props => props.theme.fg};\n    }\n  }\n\n  h1 {\n    margin-top: 18px;\n    margin-bottom: 0;\n    text-transform: uppercase;\n    letter-spacing: 2px;\n    color: ${props => props.theme.primary};\n  }\n\n  h2 {\n    margin-top: 4px;\n    margin-bottom: 18px;\n    text-transform: uppercase;\n    font-weight: 400;\n  }\n\n  .profile {\n    margin-bottom: 18px;\n    line-height: 1.25em;\n  }\n\n  .meta {\n    line-height: 1.5em;\n\n    a {\n      color: ${props => props.theme.fg};\n    }\n\n    > div:before {\n      font-family: 'icomoon';\n      margin-right: 10px;\n      color: ${props => props.theme.accent};\n    }\n\n    .email:before {\n      content: '\\\\e904';\n    }\n\n    .github:before {\n      content: '\\\\e901';\n    }\n\n    .address:before {\n      content: '\\\\e905';\n    }\n  }\n`\n\nexport default class Header extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { mugshot: null }\n\n    import('./Mugshot').then(module =>\n      this.setState({ mugshot: module.default })\n    )\n  }\n\n  render() {\n    const Mugshot = this.state.mugshot\n    return (\n      <StyleBase>\n        {Mugshot && <Mugshot className=\"mugshot\" followCursor />}\n        <h1>{data.fullName}</h1>\n        <h2>{data.title}</h2>\n        <div className=\"profile\">\n          {data.profile.map((line, i) => (\n            <div key={i}>{line}</div>\n          ))}\n        </div>\n        <div className=\"meta\">\n          <div className=\"email\">\n            <a href={`mailto:${data.email}`}>{data.email}</a>\n          </div>\n          <div className=\"github\">\n            <a href={`//${data.github}`}>{data.github}</a>\n          </div>\n          <div className=\"address\">{data.address}</div>\n        </div>\n      </StyleBase>\n    )\n  }\n}\n","import React, { Component, Suspense } from 'react'\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components'\nimport style from './style'\nimport Header from './Components/Header'\n\nconst Experience = React.lazy(() => import('./Components/Experience/Component'))\nconst Skills = React.lazy(() => import('./Components/Skills/Component'))\nconst Education = React.lazy(() => import('./Components/Education/Component'))\nconst Extra = React.lazy(() => import('./Components/Extra/Component'))\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background-color: ${props => props.theme.bg};\n    min-width: 320px;\n\n    @media print {\n      background-color: transparent;\n    }\n  }\n`\n\nconst StyleBase = styled.div`\n  padding: 16px;\n  color: ${props => props.theme.fg};\n\n  .side {\n    margin-top: 38px;\n  }\n\n  @media print {\n    width: 1024px;\n    display: grid;\n    grid-gap: 68px;\n    grid-template-columns: 320px 1fr;\n    grid-template-rows: auto 1fr;\n    padding: 0;\n\n    .main {\n      grid-column: 2;\n      grid-row: 1 / -1;\n    }\n\n    .side {\n      margin-top: 0;\n    }\n  }\n`\n\nexport default class App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={style.light}>\n        <StyleBase>\n          <GlobalStyle />\n          <Header />\n          <div className=\"main\">\n            <Suspense fallback=\"\">\n              <Experience />\n            </Suspense>\n            <Suspense fallback=\"\">\n              <Skills />\n            </Suspense>\n            <Suspense fallback=\"\">\n              <Education />\n            </Suspense>\n          </div>\n          <div className=\"side\">\n            <Suspense fallback=\"\">\n              <Extra />\n            </Suspense>\n          </div>\n        </StyleBase>\n      </ThemeProvider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker-extend.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // TODO: Implement ready\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // TODO: Implement notification for new content\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // TODO: Implement notification for offline availablity\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      // MARKER: Ignore service worker installation errors\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      // TODO: Add offline notification\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.register()\n"],"sourceRoot":""}